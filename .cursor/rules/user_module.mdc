---
description:
globs:
alwaysApply: true
---
# 用户模块

## 功能概述
HeartChat用户模块负责处理用户的注册、登录、信息管理等功能，是应用的基础模块。用户模块通过云开发提供的能力实现用户身份验证和数据存储。

## 相关文件结构
- 前端部分：
  - [miniprogram/pages/user/](mdc:miniprogram/pages/user/)：用户相关页面
    - [profile/](mdc:miniprogram/pages/user/profile/)：用户档案页面
  - [miniprogram/components/login/](mdc:miniprogram/components/login/)：登录组件

- 后端部分：
  - [cloudfunctions/user/](mdc:cloudfunctions/user/)：用户相关云函数
  - [cloudfunctions/login/](mdc:cloudfunctions/login/)：登录云函数

## 用户数据模型
根据[用户模块使用文档.md](mdc:docs/使用文档/用户模块使用文档.md)，用户数据模型包含以下字段：
```javascript
{
  _id: "用户ID",
  openid: "微信OpenID",
  nickname: "用户昵称",
  avatar: "用户头像URL",
  gender: "性别", // 0: 未知, 1: 男, 2: 女
  created_at: "创建时间",
  last_login: "最后登录时间",
  user_type: "用户类型", // 普通用户、VIP用户等
  preferences: {
    // 用户偏好设置
    theme: "主题",
    notification: true/false, // 是否开启通知
    privacy: {
      // 隐私设置
    }
  }
}
```

## 主要功能

### 用户登录
- 微信登录：使用微信小程序提供的登录能力
- 获取用户信息：获取用户昵称、头像等基本信息
- 会话维护：保持用户登录状态

### 用户信息管理
- 查看个人资料：用户可以查看自己的基本信息
- 修改用户信息：允许用户修改昵称、头像等信息
- 设置偏好：用户可以设置应用主题、通知等偏好

### 用户权限管理
- 基础权限：所有用户都具备的基本功能权限
- 高级权限：特定用户类型（如VIP）具备的额外功能权限

## 登录流程
1. 用户点击登录按钮
2. 调用微信登录API获取临时登录凭证code
3. 将code发送到login云函数
4. 云函数使用code换取用户openid和session_key
5. 检查数据库中是否已存在该openid的用户记录
6. 如不存在，创建新用户记录；如存在，更新登录时间
7. 返回用户信息和自定义登录态
8. 前端保存登录态和用户信息到本地存储

## 数据安全
- 敏感信息加密：对用户敏感信息进行加密存储
- 权限控制：通过云函数访问控制保证数据安全
- 数据校验：对用户输入数据进行有效性校验
- 会话管理：合理设置会话有效期和续期策略

## 开发计划
根据[用户模块开发计划.md](mdc:docs/使用文档/用户模块开发计划.md)，用户模块计划实现以下功能：
- 用户注册与登录优化
- 用户偏好设置完善
- 用户数据分析功能
- 用户行为跟踪
- 多平台用户数据同步

## 相关接口
- 用户登录：登录并获取用户信息
- 用户信息更新：更新用户基本信息
- 用户偏好设置：保存用户偏好
- 获取用户信息：根据ID获取用户信息
