---
description: 云数据库使用规范
globs: 
alwaysApply: false
---
# 云数据库使用规范

## 数据库设计原则

1. 遵循最小权限原则
2. 避免过度范式化和过度非范式化
3. 根据查询模式设计集合结构
4. 合理使用索引提高查询效率
5. 避免过大的文档

## 集合命名规范

1. 使用小写字母，多个单词用下划线（_）连接
2. 使用有意义的名称，反映集合内容
3. 使用单数形式命名集合
4. 系统集合使用 sys_ 前缀
5. 字典集合使用 dict_ 前缀
6. 关联集合使用相关集合名称作为前缀

## 字段命名规范

1. 使用驼峰命名法（camelCase）
2. 使用有意义的名称，避免缩写
3. ID 字段使用 _id（MongoDB 自动创建）
4. 外键字段使用 entityName_id 格式
5. 布尔类型字段使用 is 或 has 前缀
6. 时间戳字段使用 createTime、updateTime 等命名

## 索引设计规范

1. 为常用查询字段创建索引
2. 避免创建不必要的索引
3. 合理使用复合索引
4. 考虑查询模式设计索引顺序
5. 避免过多索引导致写入性能下降

## 查询优化

1. 使用索引字段进行查询
2. 避免使用正则表达式查询，特别是前缀通配符
3. 使用投影（projection）减少返回数据量
4. 使用分页查询处理大量数据
5. 避免深层嵌套查询

## 数据操作规范

1. 使用批量操作提高效率
2. 使用事务保证数据一致性
3. 避免频繁的小批量写入
4. 使用原子操作更新文档
5. 避免在循环中进行数据库操作

## 安全规范

1. 设置合适的数据库权限
2. 验证用户输入，防止注入攻击
3. 敏感数据加密存储
4. 不在客户端暴露敏感查询
5. 使用云函数进行敏感操作

## 性能优化

1. 合理设计文档结构，避免过大文档
2. 使用复合索引减少索引数量
3. 避免频繁更新大文档
4. 使用缓存减少数据库访问
5. 定期检查和优化慢查询

## 数据备份

1. 定期备份重要数据
2. 测试备份恢复流程
3. 记录数据库变更
4. 制定数据恢复策略
5. 监控数据库容量和性能

## 最佳实践

1. 使用云开发控制台监控数据库性能
2. 使用数据库事务保证数据一致性
3. 合理设计集合和字段，避免频繁变更
4. 记录关键数据操作日志
5. 定期检查和优化数据库结构
